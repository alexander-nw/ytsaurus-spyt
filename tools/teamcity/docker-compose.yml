version: "3"

services:
  test_spyt:
    image: registry.yandex.net/taxi-dmp-spark/spyt-test-base:${SPYT_TEST_IMAGE_TAG:-latest}
    container_name: test_spyt
    network_mode: host
    user: root
    volumes:
      # приложение (корень в taxi/dmp/spark)
      - ../../../.:/app
      # опциональный кеш и сбор репортов, если переменные не заданы -- будут использованы
      # fallback-тома
      - ${SPYT_REPORTS_DIR:-reports}:/reports
      - ${SPYT_CACHE_DIR:-cache}:/${HOME}/.cache
      - ${SPYT_IVY_DIR:-ivy}:/cache/ivy
      - ${SPYT_SBT_DIR:-sbt}:/cache/sbt
      - ${SPYT_M2_DIR:-m2}:/cache/m2
      - ${PYPI_CRED:-not_allowed}:/home/${USER:-sbtuser}/.pypirc
      - ${ARTIFACTORY_CREDS_FILE:-sbt_creds}:/credentials
      # фаллбек рут -- больше вероятность попасть на валидный config.json
      # в контексте, в котором HOME не определен
      - ${HOME:-root}/.docker/config.json:/home/${USER:-sbtuser}/.docker/config.json:ro
      - /run/docker.sock:/run/docker.sock
    entrypoint: /bin/sh ${PROJECT_ROOT:-/app/spark-over-yt}/tools/teamcity/entrypoint.sh
    environment:
      # матчим пользователя с хостом
      - USER=${USER:-sbtuser}
      - HOST_DOCKER_GROUP_ID=${HOST_DOCKER_GROUP_ID:-999}
      - HOME=/home/${USER:-sbtuser}
      # note: UID должен быть экспортирован или установлен в контексте запуска
      - UID=${UID:-1000}
      - SBT_COMMAND=${SBT_COMMAND:-test}
      - YT_TOKEN
      - YT_PROXY
      - PROJECT_ROOT=${PROJECT_ROOT:-/app/spark-over-yt}
      - IS_TEAMCITY
      - TC_BUILD=${BUILD_NUMBER}
      - SPYT_PUBLISH_MODE=${SPYT_PUBLISH_MODE:-cluster}

volumes:
  # fallback-тома для кеша и сбора junit-отчетов
  cache:
  ivy:
  sbt:
  m2:
  reports:
  not_allowed:
  sbt_creds:
